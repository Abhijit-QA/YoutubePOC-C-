day1 selenium

-------------------
//ChromeDriver

using OpenQA.Selenium;

using OpenQA.Selenium.Chrome;


namespace SeleniumCSharpProject{
       class Program{
              static void Main(){
              //IWebDriver driver;// = new ChromeDriver();

       IWebDriver driver = new ChromeDriver(@"C:\seleniumcsharpproject\chromedriver_win32");

       //IWebDriver driver = new EdgeDriver(@"C:\Software\edgedriver_win64");

       driver.Url="https://www.google.com/";

       driver.Manage().Window.Maximize();

       Thread.Sleep(2000);



       driver.Close();
              }
       }
}


==================================================================
Program1:Open google page using chrome browser and also close it:


using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
public class Program
{
    static void Main(string[]args)
    {
        //Launch Chrome browser
        IWebDriver driver=new ChromeDriver();
        //Enter google url
        driver.Url="https://www.google.com/";
        //maximize browser
        driver.Manage().Window.Maximize();

        //wait for 2 sec
        Thread.Sleep(2000);

        //Enter text into search text box

        driver.FindElement(By.Name("q")).SendKeys("Selenium");
        //wait for 2 sec
        Thread.Sleep(2000);

        //click on search button

        driver.FindElement(By.Name("btnK")).Click();

        
        //close the browser
        driver.Close();


    }
}
--------------------------------------------------------------------------------------------

Program2:Orangehrm login

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
class OrangeHrmlogin
{
    static void Main(string[]args)
    {
        //Launch Chrome browser
        IWebDriver driver=new ChromeDriver();

        //Enter OrangeHrm url
        driver.Url="https://opensource-demo.orangehrmlive.com/web/index.php/auth/login";
        //maximize browser
        driver.Manage().Window.Maximize();
        Thread.Sleep(10000);

        //enter the user name
        driver.FindElement(By.Name("username")).SendKeys("Admin");


        //enter password
        driver.FindElement(By.Name("password")).SendKeys("admin123");


        //login
        driver.FindElement(By.XPath("//*[@id='app']/div[1]/div/div[1]/div/div[2]/div[2]/form/div[3]/button")).Click();
        Thread.Sleep(2000);

    }

}






Program3:Selenium open using google:
//Navigation



using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
public class TS_Navigate
{
    static void Main(string[]args)
    {
        //Launch Chrome browser
        IWebDriver driver=new ChromeDriver();
        //Enter google url
        driver.Url="https://www.google.com/";
        //maximize browser
        driver.Manage().Window.Maximize();

        //wait for 2 sec
        Thread.Sleep(2000);

        //Enter text into search text box

        driver.FindElement(By.Name("q")).SendKeys("Selenium");
        //wait for 2 sec
        Thread.Sleep(2000);

        //click on search button

        driver.FindElement(By.Name("btnK")).Click();

        //wait for 2 sec
        Thread.Sleep(2000);

        //back
        driver.Navigate().Back();

        //wait for 2 sec
        Thread.Sleep(2000);
        //close the browser
        driver.Close();


    }
}
=================================================================================================
//Google Tittle

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
public class TS_GoogleTitle
{
    static void Main(string[]args)
    {
        //Launch Chrome browser
        IWebDriver driver=new ChromeDriver();
        //Enter google url
        driver.Url="https://www.google.com/";
        //maximize browser
        driver.Manage().Window.Maximize();
        //wait for 2 sec
        Thread.Sleep(2000);
        //Title the page
        string Title=driver.Title;
        Console.WriteLine("title is"+Title);
        if(Title.Equals("Google"))
        {
            Console.WriteLine("Title is matched");
        }
        else{
            Console.WriteLine("Title is mismatched");
        }

        //Enter text into search text box

        driver.FindElement(By.Name("q")).SendKeys("Selenium");
        //wait for 2 sec
        Thread.Sleep(2000);

        //click on search button

        driver.FindElement(By.Name("btnK")).Click();

         //close the browser
        driver.Close();


    }
}

==============================================================================


NUnit Using
//chrome Driver Launch using NUnit
using OpenQA.Selenium.Chrome;
using OpenQA;

namespace NUnitTestDemo;

public class UnitTest2
{
    //IWebdriver driver = new ChromeDriver();
    ChromeDriver driver;
    [SetUp]
    public void Setup()
    {
        Console.WriteLine("Setup");
        
    }

    [Test]
    public void Test1()
    {
        Console.WriteLine("--------Test1-----------");
        driver =new ChromeDriver();
        driver.Url="https://www.google.com/";
        Thread.Sleep(2000);
        driver.Manage().Window.Maximize();
        Thread.Sleep(2000);
        
        driver.Close();


        //Assert.Pass();
    }
   
    [TearDown]
    
        public void Teardown()
        {
             Console.WriteLine("teardown");
             driver.Close();

        }

    
                    }




====================================================================================

//Launch Chrome Driver and search Selenium by using Nunit



using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;


public class UnitTest2
{
    //IWebdriver driver = new ChromeDriver();
    ChromeDriver driver;
    [SetUp]
    public void Setup()
    {
        Console.WriteLine("Setup");
        
    }

    [Test]
    public void Test1()
    {
        Console.WriteLine("--------Test1-----------");
        driver =new ChromeDriver();
        driver.Url="https://www.google.com/";
        Thread.Sleep(2000);
        driver.Manage().Window.Maximize();
        Thread.Sleep(2000);
        driver.FindElement(By.Name("q")).SendKeys("Selenium");
        Thread.Sleep(4000);
        driver.FindElement(By.Name("btnK")).Click();
        Thread.Sleep(5000);
        
       // driver.Close();


        //Assert.Pass();
    }
   
    [TearDown]
    
        public void Teardown()
        {
             Console.WriteLine("teardown");
             driver.Close();

        }

    
                    }
============================================================================

//Parallel Execution and also use implicit wait

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;

public class Test
{
    ChromeDriver driver;
    [SetUp]
    public void Setup()
    {
        Console.WriteLine("Setup");
       
    }

    [Test]
    [Parallelizable]
    
    public void Test1()
    {
        driver =new ChromeDriver();
        driver.Url="https://www.google.co.in/";
        //Console.WriteLine("--------Test2-----------");
        //Assert.Pass();
        driver.Manage().Window.Maximize();
        Thread.Sleep(3000);
        driver.Quit();
    }
    [Test]
    [Parallelizable]
    public void Test2()
    {
        driver=new ChromeDriver();
           driver.Url="https://www.google.co.in/";
           driver.Manage().Window.Maximize();
          // Thread.Sleep(2000);
           driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);
           driver.FindElement(By.Name("q")).SendKeys("New Movie");
        //wait for 2 sec
        Thread.Sleep(2000);

        //click on search button

        driver.FindElement(By.Name("btnK")).Click();
        Thread.Sleep(6000);

        
        //close the browser
        driver.Quit();


    }
   

    
}
======================================================================================
//Order by

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;

public class Test
{
    
    [SetUp]
    public void Setup()
    {
        Console.WriteLine("Setup");
       
    }

    [Test,Order(2)]
    
    
    public void Test1()
    {
        Console.WriteLine("1st part ");
    }
    [Test,Order(1)]
    
    public void Test2()
    {
        
        Console.WriteLine("2nd part ");

    }
    [TearDown]
    public void TearDown()
    {
        Console.WriteLine("TearDown");
    }
   

    
}
=================================================================================================
//how to capture sentence



using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class Test
{
    ChromeDriver driver;
    
        [SetUp]
        public void SetUp()
        {
            Console.WriteLine("Type setup");
        }
        [Test]

         public void Test1()
         {
            driver=new ChromeDriver();
            driver.Url = "https://demoqa.com/frames";

            driver.Manage().Window.Maximize();

            driver.SwitchTo().Frame("frame1");

            string txthandle = driver.FindElement(By.TagName("h1")).Text;

                  Console.WriteLine(txthandle);

                 driver.SwitchTo().DefaultContent();
         }
      
          

}

==========================================================================
//Launch a browser and multiply two number 


using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium;
namespace MyNunitProject;



public class Tests

{

    ChromeDriver driver;

    [SetUp]

    public void Setup()

    {

        Console.WriteLine("SetUp1");

        driver = new ChromeDriver();

    }



    [Test]

    public void Test1()

    {

        Console.WriteLine("Test1");

        //driver.Url = ("https://www.google.co.in/");
        driver.Url=("http://demoselsite.azurewebsites.net/webform1.aspx");

        Thread.Sleep(2000);
        driver.FindElement(By.Name("txtno1")).SendKeys("7");
        Thread.Sleep(2000);
        driver.FindElement(By.Name("txtno2")).SendKeys("9");
        Thread.Sleep(2000);
        IWebElement ele=driver.FindElement(By.Name("cmbop"));
        SelectElement list=new SelectElement(ele);
        list.SelectByIndex(1);
        Thread.Sleep(2000);
        driver.FindElement(By.Name("btnsrcvcalc")).Click();

       // Assert.Pass();

    }

    [TearDown]

    public void Close()

    {
        Thread.Sleep(2000);
        Console.WriteLine("close");

        driver.Close();

    }

}
=============================================================================
Alert Box Accept() and Dismiss() syntax and text capture:-
----------------------------------------------------------

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class Test
{
    ChromeDriver driver;
    
        [SetUp]
        public void SetUp()
        {
            Console.WriteLine("Type setup");
        }
        [Test]

         public void Test1()
         {
            driver=new ChromeDriver();
            driver.Url = "https://demoqa.com/alerts";

            driver.Manage().Window.Maximize();
                driver.FindElement(By.Id("confirmButton")).Click();
                Thread.Sleep(2000);
            driver.SwitchTo().Alert().Accept();
            Thread.Sleep(4000);
             driver.FindElement(By.Id("confirmButton")).Click();
                Thread.Sleep(2000);
            driver.SwitchTo().Alert().Dismiss();


           string txthandle = driver.FindElement(By.Id("confirmResult")).Text;

                 Console.WriteLine(txthandle);

                 driver.SwitchTo().DefaultContent();
         }
      
          

}
================================================================
Utility taking Screenshot Method:-
-----------------------------------


using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class Utility
{
 public static string CaptureScreen(IWebDriver driver,string filename)
         {
            ITakesScreenshot screenshot=(ITakesScreenshot)driver;
            Screenshot ss = screenshot.GetScreenshot();
            string path = "google" + DateTime.Now.ToString("yyyy-MM-dd--HH_mm_ss");
            string filepath = @"C:\nunitpractice"+path+".png";
            ss.SaveAsFile(filepath);
            return filepath;
         }
==============================================================
Using Utility CaptureScreen to take ScreenShots:-
---------------------------------------------

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class Test
{
    ChromeDriver driver;
    
        [SetUp]
        public void SetUp()
        {
            Console.WriteLine("Type setup");
        }
        [Test]

         public void Test1()
         {
            driver=new ChromeDriver();
            driver.Url = "https://demoqa.com/alerts";

            driver.Manage().Window.Maximize();
                driver.FindElement(By.Id("confirmButton")).Click();
                Thread.Sleep(2000);
            driver.SwitchTo().Alert().Accept();
            Thread.Sleep(4000);
            Utility.CaptureScreen(driver,"google");
            
         }
      
          

}
=========================================================
RadioButton Test:-
-------------------


using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class tests 
{
    ChromeDriver driver;
    [Test]
public void RadioButtonTest()

    {

        ChromeDriver driver;

        driver = new ChromeDriver();

        driver.Url = ("https://demoselsite.azurewebsites.net/webform4.aspx");



        IList<IWebElement>elements = driver.FindElements(By.Name("RadioButtonList1"));

/;

        foreach(var element in elements)

        {

            if(element.GetAttribute("value").Equals("C#"))

            {

                element.Click();

                break;

            }

        }



        var result = driver.FindElement(By.Id("lblText")).Text;

        Console.WriteLine("Message" + result);



        if(result.Contains("C#"))

        {

            Console.WriteLine("Test Passed");

        }

        else

        {

            Console.WriteLine("Test Failed");

        }

        driver.Quit();

    }
}
=======================================================
CheckBox:-
-----------

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class tests 
{
    ChromeDriver driver;
    [Test]
public void CheckBox()

    {

        ChromeDriver driver;

        driver = new ChromeDriver();

        driver.Url = ("https://demoselsite.azurewebsites.net/webform4.aspx");

        driver.FindElement(By.Id("CheckBox1")).Click();

        var result = driver.FindElement(By.Id("Label1"));
        Thread.Sleep(3000);

        if(result != null)

        {

            Console.WriteLine("Test Passed");

        }

        else

        {

            Console.WriteLine("Test Failed");

        }

        driver.Quit();

    }


}
=========================================================
Assertion Program:-
---------------------
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Interactions.Internal;


public class Test
{
    //ChromeDriver driver;
[Test]

         public void Actions()
         {
 Console.WriteLine("Before assert");
            try{
                 Assert.IsTrue(6>9,"ErrorMsg");                             
             }catch(Exception e) {
                 Console.WriteLine(e.ToString());
             }
            Assert.Pass();
             Console.WriteLine("After assert");
	}
}
=========================================================
Action Drag Drop:-
-----------------

using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Interactions.Internal;


public class Test
{
    ChromeDriver driver;
[Test]

         public void Actions()
         {
            driver = new ChromeDriver();
	    driver.Url="https://jqueryui.com/droppable/";
            driver.Manage().Window.Maximize();
            Actions act = new Actions(driver);
            //Thread.Sleep(2000);
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);
             driver.SwitchTo().Frame(0);
            IWebElement src = driver.FindElement(By.Id("draggable"));
            IWebElement destination = driver.FindElement(By.Id("droppable"));
            
            Thread.Sleep(2000);
            act.DragAndDrop(src,destination).Build().Perform();
            Thread.Sleep(6000);
            driver.Quit();



         }
      
          

}
===================================================
POM----
HomePage
---------------------------------
using OpenQA.Selenium;

using OpenQA.Selenium.Chrome;

using SeleniumExtras.PageObjects;
namespace nunitpom
{
    






public class HomePage

{

    IWebDriver _driver;



    [FindsBy(How = How.Name, Using  = "q")]

    private IWebElement _searchtxt;



    [FindsBy(How = How.Name, Using = "btnK")]

    private IWebElement _searchbtn;



    public HomePage(IWebDriver driver)



    {

        _driver = driver;

        PageFactory.InitElements(driver, this);

    }



    public void Search(string searchtxt)

    {

        _searchtxt.SendKeys(searchtxt);

        _searchtxt.Click();

    }
}
}
===========================================================
HomeTest
--------------------
public class HomeTest
{
    private IWebDriver_driver;
    [SetUp]
    public void OpenBrowser()
    {
        new DriverManager().SetUpDriver(new ChromeConfig());
        _driver= new ChromeDriver();

    }
    public void SearchItem()
    {
        HomePage hpobj = new HomePage(_driver);
        _driver.Url = "https://www.google.co.in/";
        hpobj.Search("selenium");
    }
    Assert.True(_driver.Title.Contains("selenium"));
}
==============================================================
Alert Handling:-
------------------------
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
public class Test
{
    ChromeDriver driver;
    
        [SetUp]
        public void SetUp()
        {
            Console.WriteLine("Type setup");
        }
        [Test]

         public void Test1()
         {
            driver=new ChromeDriver();
            driver.Url = "https://demoqa.com/alerts";

            driver.Manage().Window.Maximize();
                driver.FindElement(By.Id("confirmButton")).Click();
                Thread.Sleep(2000);
            driver.SwitchTo().Alert().Accept();
            Thread.Sleep(4000);
            Utility.CaptureScreen(driver,"google");
             driver.FindElement(By.Id("confirmButton")).Click();
                Thread.Sleep(2000);
            driver.SwitchTo().Alert().Dismiss();


           string txthandle = driver.FindElement(By.Id("confirmResult")).Text;

                 Console.WriteLine(txthandle);

                 driver.SwitchTo().DefaultContent();
         }
      
          

}
============================================================
Calculator:-
----------------------
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using NUnit.Framework;
using WebDriverManager;
using WebDriverManager.DriverConfigs.Impl;
using AventStack.ExtentReports;
using AventStack.ExtentReports.Reporter;
using OpenQA.Selenium.Support.UI;
using NUnit.Framework.Interfaces;

namespace ExtentReportsDemo
{
    class CalculatorTest
    {
        IWebDriver driver ;
        ExtentHtmlReporter htmlReporter;
        ExtentReports reports;
        ExtentTest test;

        [OneTimeSetUp]
        public void OneTimeSetup()
        {
            //Initializing the report 
            var filename = this.GetType().ToString()+".html";
            htmlReporter =new ExtentHtmlReporter(@"C:\nunitpractice\"+filename);

            reports= new ExtentReports();
            reports.AttachReporter(htmlReporter);

            //Downloading the browser binary 
            new DriverManager().SetUpDriver(new ChromeConfig());
        }

        [OneTimeTearDown]
        public void OneTimeTearDown()
        {
            driver.Quit();
            reports.Flush();
        }

        [SetUp]
        public void InitializeBrowser()
        {
            driver = new ChromeDriver();

            test = reports .CreateTest(TestContext.CurrentContext.Test.Name);

            driver.Manage().Window.Maximize();

            driver.Url="https://demoselsite.azurewebsites.net/webform1.aspx";

            test.Log(Status.Info,"Test Started");
        }

        [TearDown]
        public void CloseBrowser()
        {
            var status = TestContext.CurrentContext.Result.Outcome.Status;
            var stackTrace = "<pre>"+TestContext.CurrentContext.Result.StackTrace+"</pre>";
            var errorMessage = TestContext.CurrentContext.Result.Message;

            if(status == TestStatus.Failed)
            {
                string screenshot = Utility.CaptureScreen(driver,"ErrorScreenShot");
                test.Log(Status.Fail,stackTrace + errorMessage);
                test.Log(Status.Fail,"Snapshot "+test.AddScreenCaptureFromPath(screenshot));
            }

            driver.Close();
            test.Log(Status.Info,"Test Completed");
        }

        [TestCase("10","2","Multiply","20")]
        [TestCase("20","30","Add","50")]
        [TestCase("30","20","Add","50")]
        [TestCase("200","2","Divide","50")]
        public void ArithematicTest(string n1,string n2,string op,string expvalue)
        {
            driver.FindElement(By.Id("txtno1")).SendKeys(n1);
            test.Pass("Located first textbox and enetered a number into it");
        
            driver.FindElement(By.Id("txtno2")).SendKeys(n2);
            test.Pass("Located second textbox and enetered a number into it");

            new SelectElement(driver.FindElement(By.Id("cmbop"))).SelectByValue(op);
            test.Pass("Located drop down list and selected the required operation");

            driver.FindElement(By.Id("btnsrcvcalc")).Click();
            test.Pass("Located button and performed click operation");

            Utility.CaptureScreen(driver,"Test");

            var result = driver.FindElement(By.Id("lblres")).Text;

            //Assert.AreEqual(expvalue,result);
            Assert.That(expvalue,Is.EqualTo(result));
            test.Pass("Verifying the result");
        }
    }
}
=================================================
OrageHRM Login with customize xpath:-
--------------------------------------
// using OpenQA.Selenium;
// using OpenQA.Selenium.Chrome;
// using OpenQA.Selenium.Support;
// using OpenQA.Selenium.Support.UI;
// using OpenQA.Selenium.Interactions;
// using OpenQA.Selenium.Interactions.Internal;
// public class OrangeHRMlogIn
// {
//    [Test]
//     public void Test()
//     {
//         //Launch Chrome browser
//         IWebDriver driver=new ChromeDriver();

//         //Enter OrangeHrm url
//         driver.Url="https://opensource-demo.orangehrmlive.com/web/index.php/auth/login";
//         //maximize browser
//         driver.Manage().Window.Maximize();
//        // Thread.Sleep(10000);
//         driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);

//         //enter the user name
//       // driver.FindElement(By.Name("username")).SendKeys("Admin");
//        driver.FindElement(By.XPath("//*[contains(@name,'username')]")).SendKeys("Admin");


//         //enter password
//         driver.FindElement(By.Name("password")).SendKeys("admin123");


//         //login
//         driver.FindElement(By.XPath("//*[@id='app']/div[1]/div/div[1]/div/div[2]/div[2]/form/div[3]/button")).Click();
//         Thread.Sleep(2000);
//         //driver.FindElement(By.XPath("//*[@id='app']/div[1]/div[1]/header/div[1]/div[2]/ul/li/span/i")).Click();
//         driver.FindElement(By.CssSelector("#app > div.oxd-layout > div.oxd-layout-navigation > header > div.oxd-topbar-header > div.oxd-topbar-header-userarea > ul > li > span > i")).Click();
//          Thread.Sleep(2000);
//          driver.FindElement(By.XPath("//*[@id='app']/div[1]/div[1]/header/div[1]/div[2]/ul/li/ul/li[4]/a")).Click();
//           //driver.FindElement(By.CssSelector("#app > div.oxd-layout > div.oxd-layout-navigation > header > div.oxd-topbar-header > div.oxd-topbar-header-userarea > ul > li > span > i")).Click(;)
        



//     }

// }
using System;
using OpenQA.Selenium;
using OpenQA.Selenium.Remote;
using NUnit.Framework;
using System.Threading;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using OpenQA.Selenium.Support.UI;
// For supporting Page Object Model
// Obsolete - using OpenQA.Selenium.Support.PageObjects;
using SeleniumExtras.PageObjects;

 
namespace POMExample.PageObjects
{
    class HomePage
    {
        String test_url = "https://www.google.com";
 
        private IWebDriver driver;
        private WebDriverWait wait;
 
        public HomePage(IWebDriver driver)
        {
            this.driver = driver;
            wait = new WebDriverWait(driver, TimeSpan.FromSeconds(10));
            PageFactory.InitElements(driver, this);
        }
 
        //[FindsBy(How = How.XPath, Using = "//*[@id='tsf']/div[2]/div[1]/div[1]/div/div[2]/input")]
        [FindsBy(How = How.Name, Using = "q")]
        //[CacheLookup]
        private IWebElement elem_search_text;
 
        //[FindsBy(How = How.XPath, Using = "//*[@id='tsf']/div[2]/div/div[3]/center/input[1]")]
        [FindsBy(How = How.Name, Using = "btnI")]
        //[CacheLookup]
        private IWebElement elem_submit_button;
 
        //[FindsBy(How = How.XPath, Using = "//*[@id='hplogo']")]
        [FindsBy(How = How.Id, Using = "hplogo")]
        //[CacheLookup]
        private IWebElement elem_logo_img;
 
        // Go to the designated page
        public void goToPage()
        {
            driver.Navigate().GoToUrl(test_url);
        }
 
        // Returns the Page Title
        public String getPageTitle()
        {
            return driver.Title;
        }
 
        // Returns the search string
        public String getSearchText()
        {
            return elem_search_text.Text;
        }
 
        // Checks whether the Logo is displayed properly or not
        public bool getWebPageLogo()
        {
            return elem_logo_img.Displayed;
        }
 
        public SearchPage test_search(string input_search)
        {
            elem_search_text.SendKeys(input_search);
            //wait.Until(ExpectedConditions.ElementToBeClickable(elem_submit_button)).Submit();
            elem_search_text.Submit();
            return new SearchPage(driver);
        }
    }
}
==============================================================
Try and catch method and and drag and drop :-
----------------------------------------------
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Support;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using OpenQA.Selenium.Interactions.Internal;


public class Test
{
    ChromeDriver driver;
    
        [SetUp]
        public void SetUp()
        {
            Console.WriteLine("Type setup");
        }
        [Test]

         public void Actions()
         {
            //driver = new ChromeDriver();
            Console.WriteLine("Before assert");
            try{
                Assert.IsTrue(6>9,"ErrorMsg");                             
            }catch(Exception e) {
                Console.WriteLine(e.ToString());
            }
            //Assert.Pass();
            Console.WriteLine("After assert");
            driver.Url="https://jqueryui.com/droppable/";
            driver.Manage().Window.Maximize();
            Actions act = new Actions(driver);
            //Thread.Sleep(2000);
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);
             driver.SwitchTo().Frame(0);
            IWebElement src = driver.FindElement(By.Id("draggable"));
            IWebElement destination = driver.FindElement(By.Id("droppable"));
            
            Thread.Sleep(2000);
            act.DragAndDrop(src,destination).Build().Perform();
            Thread.Sleep(6000);
            driver.Quit();



         }
      
          

}
========================================
 public void StartBrowser()
        {
            // new WebDriverManager.DriverManager().SetUpDriver(new ChromeConfig());
            //driver = new ChromeDriver();
            string browser = ConfigurationManager.AppSettings["browser"];
            InitBrowser(browser);
            driver.Manage().Timeouts().ImplicitWait = TimeSpan.FromSeconds(20);
            driver.Manage().Window.Maximize();
            driver.Url = "https://opensource-demo.orangehrmlive.com/web/index.php/auth/login";
        }
        public void InitBrowser(string browser)



        {
            switch (browser)
            {



                case "Firefox":



                    new WebDriverManager.DriverManager().SetUpDriver(new FirefoxConfig());
                    driver = new FirefoxDriver();
                    break;



                case "Chrome":



                    new WebDriverManager.DriverManager().SetUpDriver(new ChromeConfig());
                    driver = new ChromeDriver();
                    break;



                case "Edge":



                    driver = new EdgeDriver();
                    break;



            }
        }
        [TearDown]
        public void CloseBrowser()
        {
            driver.Quit();
        }
         
    }
}
